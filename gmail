#!/bin/bash
#----------------------------------------------------------------------------------------------------
# Requires jq - https://stedolan.github.io/jq
#----------------------------------------------------------------------------------------------------
#Exit the script if there's no internet
ping -q -c1 -w1 8.8.8.8 2>&1 > /dev/null || exit 3;

#Path to config file
configFile="$HOME/$BLOCK_INSTANCE";

#Exit script if no config file found
if [[ ! -f "$configFile" ]]; then
	echo "Config file not found!";
	exit 3;
fi

#Mouse actions for the block
case $BLOCK_BUTTON in 
	1) xdg-open  https://mail.google.com ;;
	2) pkill -RTMIN+2 i3blocks ;;
esac

#Source variables from config file
source $configFile;

#Google API variables
refreshToken=$(jq '.refresh_token' "$tokenFile" | tr -d \");

#Generates JSON to be POSTed
generateJSON() {
	cat << EOF
{
	"client_id":"$clientId",
	"client_secret":"$clientSecret",
	"refresh_token":"$refreshToken",
	"grant_type": "refresh_token"
}
EOF
}

#Fetch the new access token
accessToken=$(curl -s https://www.googleapis.com/oauth2/v4/token \
	-H "Content-Type: application/json" \
	-d "$(generateJSON)" | jq '.access_token' | tr -d \");

#Update access_token in tokenFile
tmp=$(mktemp);
jq ".access_token = \"$accessToken\"" "$tokenFile" > "$tmp" && mv "$tmp" "$tokenFile";

#Fetch unread mails count
count=$(curl -s -H "Authorization: Bearer $accessToken" \
	'https://www.googleapis.com/gmail/v1/users/'"$email"'/messages?q=is:unread' \
	| jq '.resultSizeEstimate');

#Display the count, if non-zero
[[ $count = "0" ]] || echo $count;
